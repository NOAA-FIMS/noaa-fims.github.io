name: Screenshot Weekly Page and Email

on:
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed

jobs:
  screenshot_and_email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install puppeteer

      - name: Find newly added weekly HTML files
        id: added_html
        run: |
          ADDED_FILES=$(git diff --name-status HEAD~2 HEAD~1 | awk '/^A/ && $2 ~ /^fims-weekly\/.*\.qmd$/ {print $2}')
          echo "ADDED_FILES=$ADDED_FILES" >> $GITHUB_ENV
          echo "$ADDED_FILES" > added_qmd.txt
          echo "$ADDED_FILES"

      - name: Screenshot new weekly page
        if: env.ADDED_FILES != ''
        run: |
          while read qmd; do
            # Get base filename (strip directory and extension)
            base=$(basename "$qmd" .qmd)
            html="docs/fims-weekly/${base}.html"
            if [ -f "$html" ]; then
              # Run your screenshot script (assuming it outputs screenshot.png)
              node .github/screenshot.js "$html"
              # (Optional: upload or email the screenshot)
            else
              echo "HTML file $html not found for $qmd"
            fi
          done < added_qmd.txt

      - name: Convert PNG to base64
        if: env.ADDED_FILES != ''
        id: encode
        run: |
          IMG_DATA=$(base64 -w 0 screenshot.png)
          echo "<p>Screenshot:</p><img src=\"data:image/png;base64,$IMG_DATA\" />" > email_body.html
          # Set output variable
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat email_body.html >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send email
        if: env.ADDED_FILES != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: Github Actions job result
          to: kelli.johnson@noaa.gov
          from: FIMS Weekly GitHub
          content_type: text/html
          body: ${{ steps.encode.outputs.body }}
          attachments: screenshot.png